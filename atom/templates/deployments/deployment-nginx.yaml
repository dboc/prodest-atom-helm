apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "atom.nginx.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "atom.labels" . | nindent 4 }}
    app.kubernetes.io/component: nginx
spec:
  replicas: {{ .Values.nginx.replicaCount }}
  selector:
    matchLabels:
      {{- include "atom.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: nginx
  template:
    metadata:
      labels:
        {{- include "atom.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: nginx
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "atom.serviceAccountName" . }}
      {{- if .Values.podSecurityContext.enabled }}
      securityContext:
        {{- omit .Values.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      containers:
        - name: nginx
          image: {{ include "atom.nginx.image" . }}
          imagePullPolicy: {{ .Values.nginx.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
            successThreshold: 1
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
            successThreshold: 1
          resources:
            {{- toYaml .Values.nginx.resources | nindent 12 }}
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            - name: uploads
              mountPath: /atom/src/uploads
              readOnly: true
            - name: cache
              mountPath: /atom/src/cache
              readOnly: true
          {{- if .Values.securityContext.enabled }}
          securityContext:
            {{- omit .Values.securityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
      volumes:
        - name: nginx-config
          configMap:
            name: {{ include "atom.nginx.fullname" . }}-config
        - name: uploads
          persistentVolumeClaim:
            claimName: {{ include "atom.fullname" . }}-uploads-pvc
        - name: cache
          persistentVolumeClaim:
            claimName: {{ include "atom.fullname" . }}-cache-pvc
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
